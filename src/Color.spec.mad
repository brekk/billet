import List from "List"
import String from "String"
import { assertEquals, test } from "Test"

import Color from "@/Color"



test(
  "toAnsi256",
  () => do {
    _ <- assertEquals(Color.toAnsi256(1, 0, 0), 16)
    _ <- assertEquals(Color.toAnsi256(249, 0, 0), 196)
    _ <- assertEquals(Color.toAnsi256(249, 250, 250), 231)
    _ <- assertEquals(Color.toAnsi256(100, 100, 100), 241)
    return assertEquals(Color.toAnsi256(244, 200, 2), 220)
  },
)

test(
  "seededSeqBg",
  () => do {
    _ <- assertEquals(Color.seededSeqFg("cool"), ["38", "2", "149", "50", "143"])
    _ <- assertEquals(Color.seededSeqBg("cool"), ["48", "2", "149", "50", "143"])
    _ <- assertEquals(Color.seededSeqBg("cool"), ["48", "2", "149", "50", "143"])
    return assertEquals(Color.seededSeqBg("nice"), ["48", "2", "240", "101", "83"])
  },
)

test(
  "genRGB",
  () => do {
    return assertEquals(Color.genRGB("cool"), #[149, 50, 143])
  },
)
test(
  "seeded",
  () => {
    check = Color.seeded("test")
    return assertEquals(check("cool"), ["38", "2", "0", "0", "0", "48", "2", "46", "214", "1"])
  },
)

test(
  "ansiFgBg",
  () => do {
    return pipe(
      Color.ansiFgBg("cool"),
      String.split("m"),
      chain(String.split(";")),
      map(String.toList),
      (raw) => do {
        _ <- assertEquals(List.slice(1, 4, raw), [['2'], ['4', '6'], ['2', '1', '4'], ['1']])
        return assertEquals(
          List.slice(6, 9, raw),
          [['2'], ['2', '0', '9'], ['4', '1'], ['2', '5', '4']],
        )
      },
    )(["38", "2", "46", "214", "1", "48", "2", "209", "41", "254"])
  },
)
