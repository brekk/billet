import List from "List"
import String from "String"
import { assertEquals, test } from "Test"

import Color from "@/Color"
import { channelR, toAnsi256 } from "@/Color/Math"
import { seededSeqBg, seededSeqFg } from "@/Color/Random"
import { report } from "@/Test"



test(
  "toAnsi256",
  () => do {
    _ <- assertEquals(toAnsi256(1, 0, 0), 16)
    _ <- assertEquals(toAnsi256(249, 0, 0), 196)
    _ <- assertEquals(toAnsi256(249, 250, 250), 231)
    _ <- assertEquals(toAnsi256(100, 100, 100), 241)
    return assertEquals(toAnsi256(244, 200, 2), 220)
  },
)

test(
  "seededSeqBg",
  () => do {
    _ <- assertEquals(seededSeqFg("cool"), ["38", "2", "149", "50", "143"])
    _ <- assertEquals(seededSeqBg("cool"), ["48", "2", "149", "50", "143"])
    _ <- assertEquals(seededSeqBg("cool"), ["48", "2", "149", "50", "143"])
    return assertEquals(seededSeqBg("nice"), ["48", "2", "240", "101", "83"])
  },
)

test(
  "seeded",
  () => {
    check = Color.seeded("test")
    return assertEquals(check("cool"), ["38", "2", "0", "0", "0", "48", "2", "46", "214", "1"])
  },
)

report(
  Color.toRGB,
  "toRGB",
  [
    #[0xffffff, Color.WHITE],
    #[0x000000, Color.BLACK],
    #[0xdeadbe, #[222, 173, 190]],
    #[0x123456, #[18, 52, 86]],
  ],
)

report(channelR, "channelR", [#[0xff0000, 0xff]])
