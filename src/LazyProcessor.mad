import type { Wish } from "Wish"

import type { Invocable, Trace } from "@/Processor"
import type { Tag } from "@/Tag"

import Wish from "Wish"

import { captured, composed, parsed, styled } from "@/Processor"



export type Invocation a b c = Invocation(Trace a b c, List Tag, Tag, a, b)

export type Lazy a b c = LazyProcessor(Invocable a b c)

// lazy :: Invocable a b c -> Lazy a b c
export lazy = (fn, x, y, z) => pipe(
  fn(x, y),
  Wish.good,
)(z)
