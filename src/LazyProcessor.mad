import type { Maybe } from "Maybe"
import type { Wish } from "Wish"

import type { Invocable, Trace } from "@/Processor"
import type { Tag } from "@/Tag"

import Wish from "Wish"



export type Lazy a b = Lazy(Trace a b, List Tag, Tag, a)

export lazy = (run, tags, t, thing) => pipe(
  Lazy(run, tags, t),
  Wish.good,
)(thing)


export transform = (fn, x) => chain(
  where {
    Lazy(run, tags, t, thing) =>
      pipe(
        fn(run, tags, t),
        of,
      )(thing)
  },
  x,
)
